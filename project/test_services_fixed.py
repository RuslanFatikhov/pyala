#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
"""
import sys
import os
sys.path.append('.')

def test_product_service():
    """–¢–µ—Å—Ç ProductService —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏"""
    print("üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï PRODUCT SERVICE")
    print("=" * 50)
    
    try:
        from app.services.product_service import ProductService
        print("‚úÖ ProductService –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –°–æ–∑–¥–∞—ë–º —Å–µ—Ä–≤–∏—Å —Å –ø—É—Ç—ë–º –∫ —Ñ–∞–π–ª—É
        csv_path = "data/products.csv"
        service = ProductService(csv_path=csv_path)
        print(f"‚úÖ ProductService —Å–æ–∑–¥–∞–Ω —Å —Ñ–∞–π–ª–æ–º: {csv_path}")
        
        # –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
        products = service.get_all_products()
        print(f"üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
        
        if products:
            print("\nüìã –ü–µ—Ä–≤—ã–µ 3 —Ç–æ–≤–∞—Ä–∞:")
            for i, product in enumerate(products[:3]):
                print(f"   {i+1}. {product.get('sku')} - {product.get('title')} - {product.get('price')}‚ÇΩ")
        
        # –¢–µ—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        categories = service.get_categories()
        print(f"\nüìÇ –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}")
        print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {categories}")
        
        # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø–æ SKU
        test_sku = 'PIA-001'
        product = service.get_product_by_sku(test_sku)
        if product:
            print(f"\nüîç –¢–æ–≤–∞—Ä {test_sku} –Ω–∞–π–¥–µ–Ω: {product.get('title')}")
        else:
            print(f"\n‚ùå –¢–æ–≤–∞—Ä {test_sku} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        test_data = {
            'sku': 'TEST-VALIDATION',
            'title': '–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏',
            'price': '5990',
            'category': '–ø–∏–∞–ª—ã',
            'stock': '10'
        }
        
        errors = service.validate_product_data(test_data)
        if not errors:
            print(f"\n‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
        else:
            print(f"\n‚ùå –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {errors}")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        print(f"\n‚ûï –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞...")
        create_result = service.create_product(test_data)
        if create_result:
            print("‚úÖ –¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–≤–∞—Ä –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–ª—Å—è
            created_product = service.get_product_by_sku('TEST-VALIDATION')
            if created_product:
                print("‚úÖ –°–æ–∑–¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
                
                # –¢–µ—Å—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                print(f"\n‚úèÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞...")
                updated_data = test_data.copy()
                updated_data['title'] = '–û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –ø–∏–∞–ª–∞'
                updated_data['price'] = '6990'
                
                update_result = service.update_product('TEST-VALIDATION', updated_data)
                if update_result:
                    print("‚úÖ –¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª—ë–Ω —É—Å–ø–µ—à–Ω–æ")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                    updated_product = service.get_product_by_sku('TEST-VALIDATION')
                    if updated_product and updated_product.get('title') == '–û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –ø–∏–∞–ª–∞':
                        print("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                    else:
                        print("‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞")
                
                # –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è
                print(f"\nüóëÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞...")
                delete_result = service.delete_product('TEST-VALIDATION')
                if delete_result:
                    print("‚úÖ –¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω —É—Å–ø–µ—à–Ω–æ")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
                    deleted_product = service.get_product_by_sku('TEST-VALIDATION')
                    if not deleted_product:
                        print("‚úÖ –¢–æ–≤–∞—Ä –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã")
                        return True
                    else:
                        print("‚ùå –¢–æ–≤–∞—Ä –Ω–µ —É–¥–∞–ª—ë–Ω")
                        return False
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞")
                    return False
            else:
                print("‚ùå –°–æ–∑–¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –¢–û–í–ê–†–û–í (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
    csv_file = "data/products.csv"
    if not os.path.exists(csv_file):
        print(f"‚ùå –§–∞–π–ª {csv_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return 1
    
    print(f"‚úÖ –§–∞–π–ª {csv_file} –Ω–∞–π–¥–µ–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
    success = test_product_service()
    
    if success:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("–°–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        return 0
    else:
        print("\n‚ùå –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´")
        return 1

if __name__ == "__main__":
    sys.exit(main())
