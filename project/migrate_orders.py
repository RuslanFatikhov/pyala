#!/usr/bin/env python3
import csv
import os
import shutil
from datetime import datetime
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('.')

def migrate_orders():
    print("üîê –ú–ò–ì–†–ê–¶–ò–Ø –î–ê–ù–ù–´–• –ó–ê–ö–ê–ó–û–í –ö –ó–ê–®–ò–§–†–û–í–ê–ù–ù–û–ú–£ –§–û–†–ú–ê–¢–£")
    print("=" * 55)
    
    try:
        from app.services.encryption import DataEncryption
        
        orders_file = 'data/orders.csv'
        
        if not os.path.exists(orders_file):
            print("‚ùå –§–∞–π–ª –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
        with open(orders_file, 'r', encoding='utf-8') as f:
            header = f.readline().strip()
            if 'name_enc' in header:
                print("‚ÑπÔ∏è  –î–∞–Ω–Ω—ã–µ —É–∂–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã")
                return
        
        print("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ...")
        
        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        with open(orders_file, 'r', encoding='utf-8') as f:
            reader = csv.DictReader(f)
            orders = list(reader)
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏: {len(orders)}")
        
        if len(orders) == 0:
            print("‚ÑπÔ∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏")
            return
        
        # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
        backup_file = f"data/orders_before_encryption_{datetime.now().strftime('%Y%m%d_%H%M%S')}.csv"
        shutil.copy2(orders_file, backup_file)
        print(f"üíæ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: {backup_file}")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
        encryption = DataEncryption()
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        temp_file = orders_file + '.encrypted.tmp'
        
        with open(temp_file, 'w', encoding='utf-8', newline='') as f:
            writer = csv.writer(f)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
            writer.writerow(['order_id', 'created_at', 'name_enc', 'phone_enc', 
                           'city', 'address_enc', 'items', 'total', 'comment_enc', 'status'])
            
            # –®–∏—Ñ—Ä—É–µ–º –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            for i, order in enumerate(orders, 1):
                try:
                    encrypted_row = [
                        order.get('order_id', ''),
                        order.get('created_at', ''),
                        encryption.encrypt_data(order.get('name', '')),
                        encryption.encrypt_data(order.get('phone', '')),
                        order.get('city', ''),  # –ì–æ—Ä–æ–¥ –Ω–µ —à–∏—Ñ—Ä—É–µ–º
                        encryption.encrypt_data(order.get('address', '')),
                        order.get('items', ''),
                        order.get('total', ''),
                        encryption.encrypt_data(order.get('comment', '')),
                        order.get('status', 'new')
                    ]
                    writer.writerow(encrypted_row)
                    print(f"üîê –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω –∑–∞–∫–∞–∑ {i}/{len(orders)}: #{order.get('order_id', 'N/A')}")
                    
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ #{order.get('order_id', 'N/A')}: {e}")
                    return
        
        # –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
        shutil.move(temp_file, orders_file)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–∞–≤–∞
        os.chmod(orders_file, 0o600)
        
        print(f"\n‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print(f"üîê –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders)}")
        print(f"üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_file}")
        print(f"üîí –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π: {e}")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –º–æ–¥—É–ª–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    migrate_orders()
